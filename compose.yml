services:
  frontend:
    container_name: react
    build: ./frontend
    # ports:
    #   - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    networks:
      - sowit
    environment:
      - VITE_GITHUB_CLIENT_ID=${VITE_GITHUB_CLIENT_ID}
      - VITE_MAPBOX_TOKEN=${VITE_MAPBOX_TOKEN}
      - VITE_API_URL=${VITE_API_URL}
    restart: always

  backend:
    container_name: django
    build: ./backend
    # ports:
    #   - "8000:8000"
    volumes:
      - ./backend:/usr/src/app
    networks:
      - sowit
    depends_on:
      - db
    environment:
      - DJANGO_SECRET=${DJANGO_SECRET}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - GITHUB_CLIENT_ID=${VITE_GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    restart: always

  db:
    container_name: postgres
    image: postgres:16.3
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - sowit
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    restart: always
  proxy:
    container_name: nginx
    build: ./proxy
    networks:
      - sowit
    ports:
      - "443:443"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    volumes:
      - ./proxy/templates/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
    depends_on:
      - frontend
      - backend
    restart: always

volumes:
  db_data:
  node_modules:

networks:
  sowit:
    driver: bridge
